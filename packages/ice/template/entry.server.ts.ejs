// Define process.env in top make it possible to use ICE_CORE_* in @ice/runtime, esbuild define options doesn't have the ability
// The runtime value such as __process.env.ICE_CORE_*__ will be replaced by esbuild define, so the value is real-time
<% coreEnvKeys.forEach((key) => { %>
process.env.<%= key %> = __process.env.<%= key %>__;
<% }) %>

import * as runtime from '@ice/runtime/server';
import * as app from '@/app';
import runtimeModules from './runtimeModules';
import Document from '@/document';
import assetsManifest from './assets-manifest.json';
import routes from './routes';

const getRouterBasename = () => {
  const appConfig = runtime.getAppConfig(app);
  return '<%- basename %>' || appConfig?.router?.basename;
}

export async function renderToHTML(requestContext, documentOnly?: boolean) {
  const basename = getRouterBasename();
  // add basename for req.url so we don't need to add basename for mocked url
  requestContext.req.url = `${basename}${requestContext.req.url}`;
  return await runtime.renderToHTML(requestContext, {
    app,
    assetsManifest,
    routes,
    runtimeModules,
    Document,
    documentOnly,
    basename,
  });
}

export async function renderToResponse(requestContext, documentOnly?: boolean) {
  const appConfig = runtime.getAppConfig(app);
  runtime.renderToResponse(requestContext, {
    app,
    assetsManifest,
    routes,
    runtimeModules,
    Document,
    documentOnly,
    basename: getRouterBasename(),
  });
}